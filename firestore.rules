rules_version = '2';
service cloud.firestore {
 match /databases/{database}/documents {
 function isSignedIn() { return request.auth != null; }
 function isOwner(userId) { return isSignedIn() && request.auth.uid == userId; }

 match /services/{docId} { allow read: if true; allow write: if false; }
 match /cities/{docId} { allow read: if true; allow write: if false; }

 match /users/{userId} {
 allow read: if true;
 allow create: if isOwner(userId);
 allow update: if isOwner(userId);
 allow delete: if false;
 }

 match /masters/{userId} {
 allow read: if true;
 allow create, update: if isOwner(userId);
 allow delete: if false;
 
 // Master reviews subcollection
 match /reviews/{reviewId} {
   allow read: if true; // anyone can read master reviews
   allow create: if request.auth != null && 
     request.resource.data.authorUid == request.auth.uid &&
     request.resource.data.rating >= 1 && 
     request.resource.data.rating <= 5;
   allow update, delete: if request.auth != null && 
     request.auth.uid == resource.data.authorUid;
 }
 }

 match /profiles/{uid} {
 allow read: if true;
 allow create, update, delete: if request.auth != null && request.auth.uid == uid;
 }

 match /listings/{id} {
 allow read: if true;
 allow create: if request.auth != null
 && request.resource.data.ownerId == request.auth.uid;
 allow update, delete: if request.auth != null
 && resource.data.ownerId == request.auth.uid;
 }

 // Reviews
 match /reviews/{reviewId} {
   allow read: if true; // anyone can read reviews
   allow create: if request.auth != null;
   allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
 }

 // Community Masters
 match /community_masters/{mid} {
 allow read: if true;
 allow create: if request.auth != null
 && request.resource.data.createdByUid == request.auth.uid;
 allow update, delete: if request.auth != null
 && resource.data.createdByUid == request.auth.uid;
 }

 // Public feed of people's reviews shown on /reviewty
 match /publicReviews/{pubId} {
   // Anyone can read the public feed
   allow read: if true;

   // Only authenticated users can create; basic validation
   allow create: if request.auth != null
     && request.resource.data.masterId is string
     && request.resource.data.rating is int
     && request.resource.data.rating >= 1
     && request.resource.data.rating <= 5;

   // Disallow updates/deletes from clients for now (optional: allow if authorUid == request.auth.uid)
   allow update, delete: if false;
 }
 }
}
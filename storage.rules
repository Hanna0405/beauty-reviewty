rules_version = '2';
service firebase.storage {
 match /b/{bucket}/o {
 function signedIn() { return request.auth != null; }
 function isImage() { return request.resource.contentType.matches('image/.*'); }
 function under8MB() { return request.resource.size < 8 * 1024 * 1024; }

 // Avatars
 match /avatars/{uid}/{allPaths=**} {
   allow read: if true;
   allow write: if signedIn() && request.auth.uid == uid && isImage() && under8MB();
 }

 // Listing images (if used)
 match /listing-images/{uid}/{allPaths=**} {
   allow read: if true;
   allow write: if signedIn() && request.auth.uid == uid && isImage() && under8MB();
 }

 // Reviews - TEMPORARY for local/dev only - allow uploads without auth
 match /reviews/{allPaths=**} {
   allow read: if true;
   allow write: if isImage() && under8MB();
 }
 }
}
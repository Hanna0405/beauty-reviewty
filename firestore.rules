rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users: public read, user can write own doc
    match /users/{uid} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == uid;
    }

    // Listings
    match /listings/{id} {
      function isOwner() {
        return request.auth != null &&
        ((request.resource.data.ownerUid == request.auth.uid) ||
        (resource != null && resource.data.ownerUid == request.auth.uid));
      }

      // Read: anyone can read published; owners can read their drafts
      allow read: if resource != null && (
        resource.data.status == "published" ||
        (request.auth != null && resource.data.ownerUid == request.auth.uid)
      );

      // Create must set ownerUid to current user
      allow create: if request.auth != null &&
        request.resource.data.ownerUid == request.auth.uid;

      // Update/Delete only owner
      allow update, delete: if isOwner();
    }

    // Default deny
    match /{document=**} { allow read, write: if false; }
  }
}